<h1>kyoudomeshi</h1>
<h3>Tweet詳細</h3>

<div class="tweet">
    <p><%= @tweet.body %></p>
    <h3><%= @tweet.body %></h3>
    <p><%= @tweet.created_at %></p>

    <% @tweet.tags.each do |t| %>
      <%= t.name %>
    <% end %>

    <% if user_signed_in? %>
      <% if current_user.already_liked?(@tweet) %>
          <%= link_to tweet_like_path(id: @tweet.id, tweet_id: @tweet.id), data: { turbo_method: :delete } do %>
              <i class="fas fa-heart"></i><%= @tweet.likes.count %>
          <% end %>
      <% else %>
          <%= link_to tweet_likes_path(id: @tweet.id, tweet_id: @tweet.id), data: { turbo_method: :post }  do %>
              <i class="fas fa-heart"></i><%= @tweet.likes.count %>
          <% end %>
      <% end %>
    <% else %>
      <i class="fas fa-heart"></i><%= @tweet.likes.count %>
    <% end %>
</div>

<h2>いいねしたユーザー</h2>
<% @tweet.liked_users.each do |user| %>
    <li><%= user.email %></li>
<% end %>

<div class="comment-wrapper">
    <p>コメント一覧</p>
    <% @comments.each do |c| %>
        <div>
            <%= c.user.email unless c.user.blank? %>
            <br>
            <%= c.content %>
            <div id="comment-<%= c.id %>-rating"></div>
        </div>
    <% end %>
    <% if user_signed_in? %>
        <div id="rating-form">
            <%= form_with(model: [@tweet, @comment], local: true) do |f| %>
                <%= f.text_area :content %>
                <%= f.hidden_field :rate, value: 0, id: "comment_rate" %>
                <%= button_tag type: "submit" do %>
                    <i class="far fa-comments"></i> コメントする
                <% end %>
            <% end %>
        </div>
    <% end %>
</div>

<%= link_to "編集する", edit_tweet_path(@tweet.id) %>
<%= link_to "一覧に戻る", tweets_path %>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    console.log("DOMContentLoaded イベント発火");

    // フォームの星評価の初期化
    const ratingForm = document.getElementById("rating-form");
    if (ratingForm && !ratingForm.dataset.ratyInitialized) {
      console.log("ratingForm に Raty を適用");
      new Raty(ratingForm, {
        starOn: "<%= asset_path('star-on.png') %>",
        starOff: "<%= asset_path('star-off.png') %>",
        starHalf: "<%= asset_path('star-half.png') %>",
        scoreName: "comment[rate]"
      });
      ratingForm.dataset.ratyInitialized = "true"; // Raty が適用されたことを記録
    }

    // 各コメントの星評価の初期化
    const comments = <%= raw(@comments.map { |c| { id: c.id, rate: c.rate || 0 } }.to_json) %>;
    comments.forEach(comment => {
      const commentRatingElement = document.getElementById(`comment-${comment.id}-rating`);
      if (commentRatingElement && !commentRatingElement.dataset.ratyInitialized) {
        console.log(`comment-${comment.id}-rating に Raty を適用`);
        new Raty(commentRatingElement, {
          starOn: "<%= asset_path('star-on.png') %>",
          starOff: "<%= asset_path('star-off.png') %>",
          starHalf: "<%= asset_path('star-half.png') %>",
          readOnly: true,
          score: comment.rate
        });
        commentRatingElement.dataset.ratyInitialized = "true"; // Raty が適用されたことを記録
      }
    });
  });
</script>
